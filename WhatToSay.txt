Καλημέρα/Καλησπέρα σας,

Ονομάζομαι Χρήστος Κουμπής και σήμερα θα σας παρουσιάσω την πτυχιακή μου εργασία.
Η πτυχιακή εργασία αφορά την δημιουργία μιας πλατφόρμας καταχώρησης, εύρεσης και ενοικίασης καταλυμάτων. 

Στην επόμενη διαφάνεια βλέπουμε με ποια θέματα θα ασχοληθούμε.

Ο σκοπός της πτυχιακής μου εργασίας είναι η εξοικείωση και εμβάθυνση στο τομέα του Web Development με την χρήση των frameworks. 

Ποιό συγκεκριμένα έγινε η χρήση του Laravel σε Back-end επίπεδο, Του Vue.js σε Front-end επίπεδο και τέλος η χρήση της MySQL για την δημιουργία της βάσης δεδομένων. Αναλυτικότερα θα τα δούμε παρακάτω.

Laravel

Το Laravel είναι ένα framework ανοιχτου κώδικα βασισμένο στην γλώσσα PHP. Δημιουργήθηκε το 2011 απο τον Taylor Otwell και σήμερα είναι το ποιο γνωστό Back-end framework με βάση τα αστέρια στο github.
Ο Taylor Otwell θέλησε να φτιάξει το framework παρόμοιο στο CodeIgniter αλλά πιο αναβαθμισμένο σε σχέση με αυτό.
Ακολουθεί αρχιτεκτονική MVC (Model-View-Controller) καθώς και έχει πολλά πακέτα απο το Symfony framework.

Επιπλέον, αξίζει να αναφερθει ότι το οικοσύστημα της Laravel αναπτύσεται συνέχεια δημιουργόντας νέα βοηθητικά πακέτα για τους Laravel Developers.

Παρακάτω βλέπουμε ένα bar-plot με αντίστοιχα Back-end frameworks. Αυτό που βλέπουμε είναι ότι η Laravel έχει τα περισσότερα αστέρια (67.902) σε σχέση με το Django (61.614) κάνοντας το το πιο γνωστό framework.

Το Vue.js είναι ένα Front-end framework ανοιχτού κώδικα που δημιουργήθηκε το 2014 απο τον Evan You. Ο Evan You θέλοντας να δημιουργήσει ένα lightweight Front-end framework σε σχέση με εκείνα της τότε εποχής ( Angular)
δημιούργησε την Vue
Η Vue ακολουθεί την αρχιτεκτονική MVVM(Model-View-ViewModel) και ο κύριος σκοπός της έιναι η δημιουργία του UI (User Interface) με την χρήση των SPA (Single-Page-Applications).

Στο παρακάτω διάγραμμα φαίνεται πώς η Vue ξεκίνησε να γίνεται γνωστή σε σχέση με άλλα Front-end frameworks. (React, Solid, Angular).
Η μέτρηση έγινε με βάση των αριθμό των αστερίων στο Github.

MySQL

Η MySQL είναι μία απο τις πιο γνωστές σχεσιακές βάσεις δεδομένων. 
Ιδρύθηκε το 1995 απο τον Michael Widenius και ο κώδικας της είναι υλοποιημένος σε C και C++.
Σήμερα έχει εξαγοραστεί απο την Sun τωρινή Oracle.
Η MySQL χρησιμοποιείται για το περίφημο stack LAMP (Linux, Apache, MySQL, PHP ή Perl)

Επιπλέον ένα σημαντικό κομμάτι είναι οι λειτουργίες της εφαρμογής καθώς και το τι χρειάζεται να έχει η εφαρμογή μας.

Οι Κύριες λειτουργίες για τους χρήστες είναι ο CRUD μηχανισμός, δηλαδή οι χρήστες να μπορούν να Δημιουργούν λογαριασμό, να διαβάζουν τα στοιχεία του λογαριασμού τους, να ανανεώνουν τα στοιχεία τους και να μπορούν να τον διαγράψουν.
Όμοια θα πρέπει να λειτουργεί και για τα καταλύματα ο ίδιος μηχανισμός.
Τέλος έιναι απαραίτητο να γίνεται έλεγχος ώστε τα API routes να έιναι προστατευμένα. Για παράδειγμα ένας μη συνδεδεμένος χρήστης δεν πρέπει να σχολιάζει...
Ένα ακόμη παράδειγμα είναι ένας μη συνδεδεμένος χρήστης να μην έχει πρόσβαση στις ιστοσελίδες του λογαριασμού.

Σε αυτή την διαφάνεια φαίνεται το διάγραμμα Λειτουργίας-Χρήσης. Όπως έγινε αναφορά φαίνονται αναλυτικότερα οι λειτουργίες για το τι μπορεί να κάνει ο χρήστης ανάλογα με τον τίτλο του (Συνδεδεμένος, μη, Admin).s

Στην συνέχεια θα αναφερθούμε στον έλεγχο της εφαρμογής. Ο έλεγχος πρέπει να γίνει τόσο στο Front-end όσο και στο Back-end αλλά και στα δεδομένα της εφαρμογής για την αποφυγή σφαλμάτων.
Στο Back-end ο έλεγχος του χρήστη γίνεται με το πακέτο Sanctum όπου δημιουργείται ένα token το οποίο περνάει στο local storage του χρήστη.
Στο Front-end ο έλεγχος του χρήστη γίνεται με το πακέτο Vuex. Το Vuex έιναι ένα χρήσιμο πακέτο γιατί ελέγχει την κατάσταση που βρίσκεται ο χρήστης. (Συνδεδεμένος και μη)
Όσο αφορά τα δεδομένα πρέπει να πούμε ότι γίνεται ο κατάλληλος έλεγχος με το Vuelidate σε Front-end επίπεδο και με το Validator σε Back-end επίπεδο. Έτσι, η εφαρμογή μας μπορεί να επικυρώσει ότι τα δεδομένα που δίνει ο χρήστης είναι έγκυρα και σωστά.

Η ανάλυση είναι μία σημαντική διαφάνεια διότι αναφέρει τον τρόπο με τον οποίο η εφαρμογή φτιάχτηκε. Με λίγα λόγια τα στάδια.
Τα στάδια της εφαρμογής είναι 2.
Η φάση 1η εμπεριέχει την δημιουργία βάσης δεδομένων και την προσθήκη ψευδών στοιχείων. Επιπλέον, η δημιουργία των κατάλληλων API Route και των Controller για την υλοποίηση CRUD μηχανισμών.
Τέλος η φάση 1 ολοκληρώνεται με τον έλεγχο στο Back-end δηλαδή, η χρήση της software εφαρμογής Postman για τον έλεγχο των αιτημάτων καθώς και των απαντήσεων.
Η φάση 2 ξεκινάει με την δημιουργία της αρχικής ιστοσελίδας μαζί με τα συστατικά nav και footer.
Στην συνέχεια, αυτό που ακολουθεί είναι η εγκατάσταση των πακέτων στο Front-end και ο έλεγχος συνδεδεμένου χρήστη.
Επιπρόσθετα δημιουργούνται τα υπόλοιπα συστατικά των ιστοσελίδων και χρησιμοποιούνται τα κατάλληλα πακέτα για την κλήση και διαχείριση αιτημάτων.
Ολοκληρώνοντας την φάση 2 γίνεται ο έλεγχος της ιστοσελίδας με την χρήση του Front-end. Για παράδειγμα, δημιουργούμε έναν χρήστη στο Front-end αντί για το Postman όπως έγινε στην φάση 1.

Τα συμπεράσματα που απέκτησα απο αύτη την πτυχιακή εργασία είναι ότι με το Laravel ο Developer μπορεί με μεγάλη ευκολία να δημιουργήσει εφαρμογές και με την δυνατότητα της κλιμάκωσης.
Το Vue βοηθάει στην δημιουργία δυναμικών UI(User Interfaces) κάνοντας καλύτερη την επικοινωνία μεταξύ του χρήστη με το περιβάλλον της ιστοσελίδας.
Τελικό συμπέρασμα, είναι ότι η χρήση των frameworks στον τομέα του Web Development θα παραμείνει για πολύ καιρό και αυτό γιατί ο προγραμματιστής μπορεί με ευκολία και ασφάλεια να αναπτύξει εφαρμογές.